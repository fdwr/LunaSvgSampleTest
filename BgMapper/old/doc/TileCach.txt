1999-01-11

Proposed method of tile cacheing:

The most frequently used tiles could simply be converted once, and then use the translation from then on whenever that tile is referenced. This greatly reduces the amount of time spent redrawing the scene layers as it does not need to do (height * width * colordepth) bit checks. For a simple 16*16*4bit sprite, that would be a very slow 1024 tests, conditional jumps, and possible operations, even though there are only 256 pixels to blit. Simply rereferencing a pretranslated tile should speed things up by at least three times. The only extra cost if the tile is not already translated is a short index check.

The graphics cache would be 64k. It would be a circular buffer consisting of several little units of various sizes. Eventually when the buffer becomes completely full, the newer tiles start overwriting older cached tiles.

Each unit in it must be a minimum of 64 bytes in size, allowing up to a maximum of 1024 graphics units to be cached. That is assuming that they are the smallest graphic unit possible, a single 8x8 tile. In reality, the cache would usually consist of mostly 8x8 tiles, some 8x8 sprites, and many 16x16 sprites. The larger the graphic unit is, obviously the more space they take up in the cache. If the largest possible unit was used, a 64x64 sprite, only 16 of them could fit into the 64k cache.

Each unit pointer is a dword, one word for the source (where the tile came from) and another word is a pointer to it in the cache. Whenever new tiles start to overwrite older ones, the space is reclaimed and the index for that source is cleared (set to -1) to let it be known that tile is no longer cached. Then the cache pointer is moved forward by the number of bytes that is needed for the cache to be tiled. The minimum size of any tile (8x8) is 64 bytes, so that is why the smallest unit is that size. Cached graphics that need more than that would more unit pointers. A 16x16 sprite (requiring 256 bytes) would use the space of four unit pointers for an 8x8 tiles.

Current cache base (word)
Current cache unit (word)

	65280, cave
--->	65344, stone
	65408, bush
	65472, water

Needs to cache flower tile...
...Required cache graphic size is 64 bytes.
Check that graphic size is at least 64 bytes, if not, set to minimum.
Check that there is enough space before end of cache to fit...
...There is.
Deallocate old graphic unit (bush) and clear index for it (set to -1).
Get cache base to return to caller,
Adjust cache base plus size of graphics unit,

	65280,	cave
	65344,	flower
--->	65408,	bush
	65472,	water
	0,	door
	64,	fence

Needs to cache Zelda sprite...
...Required cache graphic size is 256 bytes.
Check that graphic size is at least 64 bytes, if not, set to minimum.
Check that there is enough space before end of cache to fit...
if cache base + size > 65536 then uh-oh (65408 + 64 = 65664)
if it equals 65536 then loop around to zero.
...There is not, so wipe out all remaining graphic units to of cache.
  Deallocate old graphic units (bush, water) and clear indexes for them (set to -1).
  Deallocate old graphic units (bush, water) and clear indexes for them (set to -1).
Get cache base to return to caller,
Adjust cache base plus size of graphics unit,
