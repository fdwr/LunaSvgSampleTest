# $Id: Makefile.in,v 1.48 2003/09/01 04:19:37 hpa Exp $
#
# Auto-configuring Makefile for the Netwide Assembler.
#
# The Netwide Assembler is copyright (C) 1996 Simon Tatham and
# Julian Hall. All rights reserved. The software is
# redistributable under the licence given in the file "Licence"
# distributed in the NASM archive.

srcdir		= @srcdir@
VPATH		= @srcdir@
prefix		= @prefix@
exec_prefix	= @exec_prefix@
bindir		= @bindir@
mandir		= @mandir@

CC		= @CC@
CFLAGS		= @CFLAGS@ @GCCFLAGS@ @DEFS@ -I$(srcdir) -I.  
LDFLAGS		= @LDFLAGS@
LIBS		= @LIBS@
PERL		= perl

INSTALL		= @INSTALL@
INSTALL_PROGRAM	= @INSTALL_PROGRAM@
INSTALL_DATA	= @INSTALL_DATA@

NROFF		= @NROFF@

# Binary suffixes
O               = @OBJEXT@
X               = @EXEEXT@

.SUFFIXES: .c .i .s .$(O) .1 .man

.PHONY: all doc rdf install clean distclean cleaner spotless install_rdf
.PHONY: install_doc everything install_everything strip perlreq dist

.c.$(O):
	$(CC) -c $(CFLAGS) -o $@ $<

.c.s:
	$(CC) -S $(CFLAGS) -o $@ $<

.c.i:
	$(CC) -E $(CFLAGS) -o $@ $<

.1.man:
	$(NROFF) -man $< > $@

NASM =	nasm.$(O) nasmlib.$(O) float.$(O) insnsa.$(O) assemble.$(O) \
	labels.$(O) parser.$(O) outform.$(O) output/outbin.$(O) \
	output/outaout.$(O) output/outcoff.$(O) output/outelf.$(O) \
	output/outobj.$(O) output/outas86.$(O) output/outrdf2.$(O) \
	output/outdbg.$(O) output/outieee.$(O) \
	preproc.$(O) listing.$(O) eval.$(O)

NDISASM = ndisasm.$(O) disasm.$(O) sync.$(O) nasmlib.$(O) insnsd.$(O)

all: nasm$(X) ndisasm$(X) nasm.man ndisasm.man
	cd rdoff && $(MAKE) all

nasm$(X): $(NASM)
	$(CC) $(LDFLAGS) -o nasm$(X) $(NASM) $(LIBS)

ndisasm$(X): $(NDISASM)
	$(CC) $(LDFLAGS) -o ndisasm$(X) $(NDISASM) $(LIBS)

# These source files are automagically generated from a single
# instruction-table file by a Perl script. They're distributed,
# though, so it isn't necessary to have Perl just to recompile NASM
# from the distribution.

insnsa.c: insns.dat insns.pl
	$(PERL) $(srcdir)/insns.pl -a $(srcdir)/insns.dat
insnsd.c: insns.dat insns.pl
	$(PERL) $(srcdir)/insns.pl -d $(srcdir)/insns.dat
insnsi.h: insns.dat insns.pl
	$(PERL) $(srcdir)/insns.pl -i $(srcdir)/insns.dat
insnsn.c: insns.dat insns.pl
	$(PERL) $(srcdir)/insns.pl -n $(srcdir)/insns.dat

# These files contains all the standard macros that are derived from
# the version number.
version.h: version version.pl
	$(PERL) $(srcdir)/version.pl h < $(srcdir)/version > version.h

version.mac: version version.pl
	$(PERL) $(srcdir)/version.pl mac < $(srcdir)/version > version.mac

# This source file is generated from the standard macros file
# `standard.mac' by another Perl script. Again, it's part of the
# standard distribution.

macros.c: macros.pl standard.mac version.mac
	$(PERL) $(srcdir)/macros.pl $(srcdir)/standard.mac version.mac

# These source files are generated from regs.dat by yet another
# perl script.
regs.c: regs.dat regs.pl
	$(PERL) $(srcdir)/regs.pl c $(srcdir)/regs.dat > regs.c
regflags.c: regs.dat regs.pl
	$(PERL) $(srcdir)/regs.pl fc $(srcdir)/regs.dat > regflags.c
regdis.c: regs.dat regs.pl
	$(PERL) $(srcdir)/regs.pl dc $(srcdir)/regs.dat > regdis.c
regvals.c: regs.dat regs.pl
	$(PERL) $(srcdir)/regs.pl vc $(srcdir)/regs.dat > regvals.c
regs.h: regs.dat regs.pl
	$(PERL) $(srcdir)/regs.pl h $(srcdir)/regs.dat > regs.h

# This target generates all files that require perl.
# This allows easier generation of distribution (see dist target).
PERLREQ = macros.c insnsa.c insnsd.c insnsi.h insnsn.c \
	  regs.c regs.h regflags.c regdis.c regvals.c \
	  version.h version.mac 
perlreq: $(PERLREQ)

install: nasm$(X) ndisasm$(X)
	$(INSTALL_PROGRAM) nasm$(X) $(INSTALLROOT)$(bindir)/nasm$(X)
	$(INSTALL_PROGRAM) ndisasm$(X) $(INSTALLROOT)$(bindir)/ndisasm$(X)
	$(INSTALL_DATA) $(srcdir)/nasm.1 $(INSTALLROOT)$(mandir)/man1/nasm.1
	$(INSTALL_DATA) $(srcdir)/ndisasm.1 $(INSTALLROOT)$(mandir)/man1/ndisasm.1

clean:
	rm -f *.$(O) *.s *.i
	rm -f output/*.$(O) output/*.s output/*.i
	rm -f nasm$(X) ndisasm$(X)
	cd rdoff && $(MAKE) clean

distclean: clean
	rm -f config.* Makefile *~ *.bak *.lst *.bin
	rm -f output/*~ output/*.bak
	rm -f test/*.lst test/*.bin test/*.$(O) test/*.bin
	rm -rf autom4te*.cache
	cd rdoff && $(MAKE) distclean

cleaner: clean
	rm -f $(PERLREQ) *.man nasm.spec
	cd doc && $(MAKE) clean

spotless: distclean cleaner
	rm -f doc/Makefile doc/*~ doc/*.bak

strip:
	strip --strip-unneeded nasm$(X) ndisasm$(X)

rdf:
	cd rdoff && $(MAKE)

rdf_install install_rdf:
	cd rdoff && $(MAKE) install

doc:
	cd doc && $(MAKE) all

doc_install install_doc:
	cd doc && $(MAKE) install

everything: all doc rdf

install_everything: everything install install_doc install_rdf

dist: spotless perlreq spec
	autoheader
	autoconf
	rm -rf ./autom4te*.cache

tar: dist
	tar cvjf ../nasm-`cat version`-`date +%Y%m%d`.tar.bz2 ../`./nasm-dir`

spec: nasm.spec

nasm.spec: nasm.spec.in version version.pl
	sed -e s/@@VERSION@@/`cat $(srcdir)/version`/g \
	    -e s/@@ID@@/`$(PERL) $(srcdir)/version.pl id < $(srcdir)/version`/g \
	    < nasm.spec.in > nasm.spec

#
# This build dependencies in *ALL* makefiles.  Partially for that reason,
# it's expected to be invoked manually.
#
alldeps: perlreq
	$(PERL) mkdep.pl -M Makefile.in Mkfiles/Makefile.* -- \
		. output
	./config.status

#-- Magic hints to mkdep.pl --#
# @object-ending: ".$(O)"
# @path-separator: "/"
#-- Everything below is generated by mkdep.pl - do not edit --#
assemble.$(O): assemble.c insns.h insnsi.h assemble.h nasmlib.h version.h \
 regvals.c nasm.h regs.h
disasm.$(O): disasm.c insns.h regs.c insnsn.c insnsi.h sync.h version.h \
 names.c nasm.h regdis.c disasm.h regs.h
eval.$(O): eval.c labels.h nasmlib.h version.h nasm.h eval.h regs.h
float.$(O): float.c version.h nasm.h regs.h
insnsa.$(O): insnsa.c insns.h insnsi.h version.h nasm.h regs.h
insnsd.$(O): insnsd.c insns.h insnsi.h version.h nasm.h regs.h
insnsn.$(O): insnsn.c
labels.$(O): labels.c nasmlib.h version.h nasm.h regs.h
listing.$(O): listing.c listing.h nasmlib.h version.h nasm.h regs.h
macros.$(O): macros.c
names.$(O): names.c insnsn.c regs.c
nasm.$(O): nasm.c listing.h preproc.h insns.h outform.h assemble.h parser.h \
 nasm.h regs.h labels.h insnsi.h version.h nasmlib.h eval.h
nasmlib.$(O): nasmlib.c insns.h regs.c names.c nasm.h regs.h insnsn.c \
 insnsi.h nasmlib.h version.h
ndisasm.$(O): ndisasm.c insns.h sync.h nasm.h disasm.h regs.h insnsi.h \
 nasmlib.h version.h
outform.$(O): outform.c outform.h nasm.h regs.h version.h
output/outaout.$(O): output/outaout.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outas86.$(O): output/outas86.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outbin.$(O): output/outbin.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outcoff.$(O): output/outcoff.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outdbg.$(O): output/outdbg.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outelf.$(O): output/outelf.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outieee.$(O): output/outieee.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outobj.$(O): output/outobj.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outrdf.$(O): output/outrdf.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outrdf2.$(O): output/outrdf2.c outform.h nasm.h regs.h nasmlib.h \
 version.h
parser.$(O): parser.c insns.h parser.h nasm.h regs.h insnsi.h regflags.c \
 float.h nasmlib.h version.h
preproc.$(O): preproc.c nasm.h macros.c regs.h nasmlib.h version.h
regdis.$(O): regdis.c
regflags.$(O): regflags.c
regs.$(O): regs.c
regvals.$(O): regvals.c
sync.$(O): sync.c sync.h
