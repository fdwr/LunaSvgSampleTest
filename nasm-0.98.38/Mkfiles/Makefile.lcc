# host: windows nt/95
# target: windows nt/95
# Makefile for the Netwide Assembler
#
# The Netwide Assembler is copyright (C) 1996 Simon Tatham and
# Julian Hall. All rights reserved. The software is
# redistributable under the licence given in the file "Licence"
# distributed in the NASM archive.

# makefile designed for lcc-win32
# lcc-win32 is lcc (c compiler coded by guys from princeton uni)
# ported to win32 by jacob navia
# available at http://www.remcomp.com/lcc-win32/

CFLAGS = -c -O -g2
CC = lcc.exe $(CFLAGS)
LFLAGS = -subsystem console -s
LD = lcclnk.exe $(LFLAGS)
OBJ = obj

.c.${OBJ}:
        $(CC) -o $@ $*.c

NASM = nasm.${OBJ} nasmlib.${OBJ} float.${OBJ} insnsa.${OBJ} assemble.${OBJ} labels.${OBJ} \
       parser.${OBJ} outform.${OBJ} output/outbin.${OBJ} output/outaout.${OBJ} output/outcoff.${OBJ} output/outelf.${OBJ} \
       output/outobj.${OBJ} output/outas86.${OBJ} output/outrdf.${OBJ} output/outdbg.${OBJ} output/outrdf2.${OBJ} \
       output/outieee.${OBJ} preproc.${OBJ} listing.${OBJ} eval.${OBJ}

NDISASM = ndisasm.${OBJ} disasm.${OBJ} sync.${OBJ} nasmlib.${OBJ} insnsd.${OBJ}

all: nasm ndisasm

# linker response files
# that may take long, too much spawning command.com :)
NASM.LNK: makefile.lcc
        echo nasm.$(OBJ) > NASM.LNK
        echo nasmlib.$(OBJ) >> NASM.LNK
        echo eval.$(OBJ) >> NASM.LNK
        echo float.$(OBJ) >> NASM.LNK
        echo insnsa.$(OBJ) >> NASM.LNK
        echo assemble.$(OBJ) >> NASM.LNK
        echo labels.$(OBJ) >> NASM.LNK
        echo listing.$(OBJ) >> NASM.LNK
        echo parser.$(OBJ) >> NASM.LNK
        echo preproc.$(OBJ) >> NASM.LNK
        echo outform.$(OBJ) >> NASM.LNK
        echo output/outbin.$(OBJ) >> NASM.LNK
        echo output/outaout.$(OBJ) >> NASM.LNK
        echo output/outcoff.$(OBJ) >> NASM.LNK
        echo output/outelf.$(OBJ) >> NASM.LNK
        echo output/outobj.$(OBJ) >> NASM.LNK
        echo output/outas86.$(OBJ) >> NASM.LNK
        echo output/outrdf.$(OBJ) >> NASM.LNK
        echo output/outrdf2.$(OBJ) >> NASM.LNK
        echo output/outieee.$(OBJ) >> NASM.LNK
        echo output/outdbg.$(OBJ) >> NASM.LNK

NDISASM.LNK: makefile.lcc
        echo ndisasm.$(OBJ) > NDISASM.LNK
        echo disasm.$(OBJ) >> NDISASM.LNK
        echo sync.$(OBJ) >> NDISASM.LNK
        echo nasmlib.$(OBJ) >> NDISASM.LNK
        echo insnsd.$(OBJ) >> NDISASM.LNK

nasm: $(NASM) nasm.lnk
        $(LD) -o nasm.exe @nasm.lnk

ndisasm: $(NDISASM) ndisasm.lnk
        $(LD) -o ndisasm.exe @ndisasm.lnk

# These source files are automagically generated from a single
# instruction-table file by a Perl script. They're distributed,
# though, so it isn't necessary to have Perl just to recompile NASM
# from the distribution.

insnsa.c insnsd.c insnsi.h insnsn.c: insns.dat insns.pl
	perl insns.pl insns.dat

# These files contains all the standard macros that are derived from
# the version number.
version.h: version version.pl
	perl version.pl h < version > version.h

version.mac: version version.pl
	perl version.pl mac < version > version.mac

# This source file is generated from the standard macros file
# `standard.mac' by another Perl script. Again, it's part of the
# standard distribution.

macros.c: standard.mac macros.pl version.mac
	perl macros.pl standard.mac version.mac

# These source files are generated from regs.dat by yet another
# perl script.
regs.c: regs.dat regs.pl
	perl regs.pl c regs.dat > regs.c
regflags.c: regs.dat regs.pl
	perl regs.pl fc regs.dat > regflags.c
regdis.c: regs.dat regs.pl
	perl regs.pl dc regs.dat > regdis.c
regvals.c: regs.dat regs.pl
	perl regs.pl vc regs.dat > regvals.c
regs.h: regs.dat regs.pl
	perl regs.pl h regs.dat > regs.h

clean:
        rm -f *.${OBJ} nasm.exe ndisasm.exe

#-- Magic hints to mkdep.pl --#
# @object-ending: ".${OBJ}"
# @path-separator: "/"
#-- Everything below is generated by mkdep.pl - do not edit --#
assemble.${OBJ}: assemble.c insns.h assemble.h regvals.c nasm.h regs.h \
 insnsi.h nasmlib.h version.h
disasm.${OBJ}: disasm.c insns.h regs.c sync.h names.c nasm.h disasm.h regs.h \
 insnsn.c insnsi.h version.h regdis.c
eval.${OBJ}: eval.c nasm.h regs.h labels.h nasmlib.h version.h eval.h
float.${OBJ}: float.c nasm.h regs.h version.h
insnsa.${OBJ}: insnsa.c insns.h nasm.h regs.h insnsi.h version.h
insnsd.${OBJ}: insnsd.c insns.h nasm.h regs.h insnsi.h version.h
insnsn.${OBJ}: insnsn.c
labels.${OBJ}: labels.c nasm.h regs.h nasmlib.h version.h
listing.${OBJ}: listing.c listing.h nasm.h regs.h nasmlib.h version.h
macros.${OBJ}: macros.c
names.${OBJ}: names.c regs.c insnsn.c
nasm.${OBJ}: nasm.c listing.h preproc.h insns.h outform.h assemble.h \
 parser.h nasm.h regs.h labels.h insnsi.h nasmlib.h version.h eval.h
nasmlib.${OBJ}: nasmlib.c insns.h regs.c names.c nasm.h regs.h insnsn.c \
 insnsi.h nasmlib.h version.h
ndisasm.${OBJ}: ndisasm.c insns.h sync.h nasm.h disasm.h regs.h insnsi.h \
 nasmlib.h version.h
outform.${OBJ}: outform.c outform.h nasm.h regs.h version.h
output/outaout.${OBJ}: output/outaout.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outas86.${OBJ}: output/outas86.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outbin.${OBJ}: output/outbin.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outcoff.${OBJ}: output/outcoff.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outdbg.${OBJ}: output/outdbg.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outelf.${OBJ}: output/outelf.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outieee.${OBJ}: output/outieee.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outobj.${OBJ}: output/outobj.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outrdf.${OBJ}: output/outrdf.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outrdf2.${OBJ}: output/outrdf2.c outform.h nasm.h regs.h nasmlib.h \
 version.h
parser.${OBJ}: parser.c insns.h parser.h nasm.h regs.h insnsi.h regflags.c \
 float.h nasmlib.h version.h
preproc.${OBJ}: preproc.c nasm.h macros.c regs.h nasmlib.h version.h
regdis.${OBJ}: regdis.c
regflags.${OBJ}: regflags.c
regs.${OBJ}: regs.c
regvals.${OBJ}: regvals.c
sync.${OBJ}: sync.c sync.h
