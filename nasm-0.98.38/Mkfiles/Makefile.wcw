# host: watcom c (dos, windows, os/2)
# target: windows nt character mode executable
# Makefile for the Netwide Assembler
#
# The Netwide Assembler is copyright (C) 1996 Simon Tatham and
# Julian Hall. All rights reserved. The software is
# redistributable under the licence given in the file "Licence"
# distributed in the NASM archive.
#
# this makefile is designed for use with of Watcom C 32 bit compiler
# it generates win32 console (character mode) executable
# it has been tested with
# borland make.exe 4.0
# microsoft nmake.exe 1.3
# watcom wmake.exe /u 3.2 (remember about that /u option :)
#
# all this should compile under watcom c 9.5, 10.0, 10.5 and 10.6
# i dont know about 11.0 because i didnt yet see it

CFLAGS = -fpi -mf -3r -s -bt=dos -oilrt
# -fpi    inline math + emulation
# -mf     flat model (isnt it by default :)
# -3r     386 register calling (does everyone have pentium nowadays ?)
# -s      no stack checking
# -bt=nt  target system - windows nt
# -oilrt  mega cool optimization :)

CC = wcc386.exe $(CFLAGS)
# compiler
LFLAGS = SYSTEM nt
# linker flags
# target system nt - character mode
LD = wlink.exe $(LFLAGS)
# linker
OBJ = obj
# whatever

.c.$(OBJ):
        $(CC) $*.c

NASMOBJS = nasm.$(OBJ) nasmlib.$(OBJ) float.$(OBJ) insnsa.$(OBJ) \
           assemble.$(OBJ) labels.$(OBJ) parser.$(OBJ) outform.$(OBJ) \
	   output/outbin.$(OBJ) output/outaout.$(OBJ) output/outcoff.$(OBJ) output/outelf.$(OBJ) \
	   output/outobj.$(OBJ) output/outas86.$(OBJ) output/outrdf.$(OBJ) output/outdbg.$(OBJ) \
	   preproc.$(OBJ) listing.$(OBJ) eval.$(OBJ) output/outrdf2.$(OBJ) \
	   output/outieee.$(OBJ)

NDISASMOBJS = ndisasm.$(OBJ) disasm.$(OBJ) sync.$(OBJ) nasmlib.$(OBJ) \
	      insnsd.$(OBJ)

all : nasm.exe ndisasm.exe
        echo This is dummy command for dumb make

nasm.exe: $(NASMOBJS) NASM.LNK
        $(LD) @NASM.LNK

ndisasm.exe: $(NDISASMOBJS) NDISASM.LNK
        $(LD) @NDISASM.LNK

# linker response files
# that may take long, too much spawning command.com :)
NASM.LNK: makefile.wcw
        echo N nasm.exe > NASM.LNK
        echo F nasm.$(OBJ) >> NASM.LNK
        echo F nasmlib.$(OBJ) >> NASM.LNK
        echo F eval.$(OBJ) >> NASM.LNK
        echo F float.$(OBJ) >> NASM.LNK
        echo F insnsa.$(OBJ) >> NASM.LNK
        echo F assemble.$(OBJ) >> NASM.LNK
        echo F labels.$(OBJ) >> NASM.LNK
        echo F listing.$(OBJ) >> NASM.LNK
        echo F parser.$(OBJ) >> NASM.LNK
        echo F preproc.$(OBJ) >> NASM.LNK
        echo F outform.$(OBJ) >> NASM.LNK
        echo F output/outbin.$(OBJ) >> NASM.LNK
        echo F output/outaout.$(OBJ) >> NASM.LNK
        echo F output/outcoff.$(OBJ) >> NASM.LNK
        echo F output/outelf.$(OBJ) >> NASM.LNK
        echo F output/outobj.$(OBJ) >> NASM.LNK
        echo F output/outas86.$(OBJ) >> NASM.LNK
        echo F output/outrdf.$(OBJ) >> NASM.LNK
        echo F output/outrdf2.$(OBJ) >> NASM.LNK
        echo F output/outieee.$(OBJ) >> NASM.LNK
        echo F output/outdbg.$(OBJ) >> NASM.LNK

NDISASM.LNK: makefile.wcw
        echo N ndisasm.exe > NDISASM.LNK
        echo F ndisasm.$(OBJ) >> NDISASM.LNK
        echo F disasm.$(OBJ) >> NDISASM.LNK
        echo F sync.$(OBJ) >> NDISASM.LNK
        echo F nasmlib.$(OBJ) >> NDISASM.LNK
        echo F insnsd.$(OBJ) >> NDISASM.LNK

clean :
        del *.obj
        del *.lnk
        del nasm.exe
        del ndisasm.exe

#-- Magic hints to mkdep.pl --#
# @object-ending: ".$(OBJ)"
# @path-separator: "/"
#-- Everything below is generated by mkdep.pl - do not edit --#
assemble.$(OBJ): assemble.c insns.h assemble.h regvals.c nasm.h regs.h \
 insnsi.h nasmlib.h version.h
disasm.$(OBJ): disasm.c insns.h regs.c sync.h names.c nasm.h disasm.h regs.h \
 insnsn.c insnsi.h version.h regdis.c
eval.$(OBJ): eval.c nasm.h regs.h labels.h nasmlib.h version.h eval.h
float.$(OBJ): float.c nasm.h regs.h version.h
insnsa.$(OBJ): insnsa.c insns.h nasm.h regs.h insnsi.h version.h
insnsd.$(OBJ): insnsd.c insns.h nasm.h regs.h insnsi.h version.h
insnsn.$(OBJ): insnsn.c
labels.$(OBJ): labels.c nasm.h regs.h nasmlib.h version.h
listing.$(OBJ): listing.c listing.h nasm.h regs.h nasmlib.h version.h
macros.$(OBJ): macros.c
names.$(OBJ): names.c regs.c insnsn.c
nasm.$(OBJ): nasm.c listing.h preproc.h insns.h outform.h assemble.h \
 parser.h nasm.h regs.h labels.h insnsi.h nasmlib.h version.h eval.h
nasmlib.$(OBJ): nasmlib.c insns.h regs.c names.c nasm.h regs.h insnsn.c \
 insnsi.h nasmlib.h version.h
ndisasm.$(OBJ): ndisasm.c insns.h sync.h nasm.h disasm.h regs.h insnsi.h \
 nasmlib.h version.h
outform.$(OBJ): outform.c outform.h nasm.h regs.h version.h
output/outaout.$(OBJ): output/outaout.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outas86.$(OBJ): output/outas86.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outbin.$(OBJ): output/outbin.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outcoff.$(OBJ): output/outcoff.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outdbg.$(OBJ): output/outdbg.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outelf.$(OBJ): output/outelf.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outieee.$(OBJ): output/outieee.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outobj.$(OBJ): output/outobj.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outrdf.$(OBJ): output/outrdf.c outform.h nasm.h regs.h nasmlib.h \
 version.h
output/outrdf2.$(OBJ): output/outrdf2.c outform.h nasm.h regs.h nasmlib.h \
 version.h
parser.$(OBJ): parser.c insns.h parser.h nasm.h regs.h insnsi.h regflags.c \
 float.h nasmlib.h version.h
preproc.$(OBJ): preproc.c nasm.h macros.c regs.h nasmlib.h version.h
regdis.$(OBJ): regdis.c
regflags.$(OBJ): regflags.c
regs.$(OBJ): regs.c
regvals.$(OBJ): regvals.c
sync.$(OBJ): sync.c sync.h
