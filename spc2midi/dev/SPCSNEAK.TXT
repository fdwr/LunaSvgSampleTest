I'd like to write a small program that would finally answer some of my
questions about how certain instructions and registers work. Just need a
cartridge backup device.


<Commands>
0  nop
1  read spc memory location once
2  read spc memory location continously
3  read dsp reg once
4  read dsp reg continously
5  write spc memory location once
6  write dsp reg once
7  set A register
8  set Y register
9  set X register
10 set flags
11 get A register
12 get Y register
13 get X register
14 get flags
15 test instruction (returns flags)
16 reset


<Sent to SPC>
PC0 (F4h) command
PC1 (F5h) write value
PC2 (F6h) low address
PC3 (F7h) high address
APUI00    read value

<Display>
Cmd Adr WValue      RValue
00 0000 00 00000000 00 00000000


<Test code>
   mov [ControlReg],00110000b
   mov a,13
ShowByte:
   mov [PC0],a
MainLoop:
   mov a,[PC0]
   mov x,[PC1]
   cmp a,0
   beq NewCmd
   cmp [Command],2
   beq RegReread
   bra MainLoop

NewCmd:
   cmp al,17
   bcc MainLoop
   mov [Command],a
   lsl a
   mov x,a
   jmp [CommandJtbl+x]

DspReadCont:
   mov [Command],2
DspRead:
   mov a,[PC2]
   mov [0F2h],a
   mov a,0F3h
   mov y,0
   bra RegReadGiven

RegRead:
DspReadCont:
   mov ya,[PC2]
RegReadGiven:
   mov [ReadAdr],ya
RegReread:
ReadAdr equ $+1
   mov al,[abs]
   mov [PC0],al
   bra ShowByte

RegWrite:
   mov ya,[PC2]
   mov [WriteAdr],ya
WriteAdr  equ $+1
   mov [abs],al
   bra MainLoop

DspWrite:
   mov a,[PC2]
   mov [0F2h],a
   mov a,[PC1]
   mov [0F3h],a
   bra MainLoop

SetA:
   mov [RegA],x
   bra MainLoop
SetX:
   mov [RegX],x
   bra MainLoop
SetY:
   mov [RegY],x
   bra MainLoop
SetFlags:
   mov [RegFlags],x
   bra MainLoop
GetA:
   mov a,[RegA]
   bra ShowByte
GetX:
   mov a,[RegX]
   bra ShowByte
GetY:
   mov a,[RegY]
   bra ShowByte
GetFlags:
   mov a,[RegFlags]
   bra ShowByte

InstTestRet:
   push psw
   mov [RegA],a
   mov [RegX],x
   mov [RegY],y
   pop a
   mov [Flags],a
   mov x,sp
   mov [RegSp],x
   bra ShowByte
InstTest:
   mov x,[Value]
   mov a,[OpcJtbl+x]
   mov [JumpAdr+1],a
   mov a,[OpcJtbl+1+x]
   mov [JumpAdr+2],a

   mov x,[RegSp]
   mov sp,x
   mov a,[Flags]
   push a
   mov a,[RegA]
   mov x,[RegX]
   mov y,[RegY]
   pop psw
JumpAdr:
   jmp InstTestRet

Op9E:
   div ya,x
   jmp InstTestRet
OpCF:
   mul ya
   jmp InstTestRet

CommandJtbl:
   dw MainLoop ;NOP
   dw RegRead
   dw RegReadCont
   dw DspRead
   dw DspReadCont
   dw RegWrite
   dw DspWrite
   dw SetA
   dw SetY
   dw SetX
   dw SetFlags
   dw GetA
   dw GetY
   dw GetX
   dw GetFlags
   dw InstTest
   dw 0FFC0h ;ROM BIOS

OpcJtbl:
   ...
   dw Op9E
   ...
   dw OpCF
   ...
