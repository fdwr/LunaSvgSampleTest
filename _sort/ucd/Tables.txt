# This is the control file for ucdtool.exe.  It specifies which properties
# to generate information for.
#
# Rebuilding data:
#   cd %_NTROOT%\windows\core\text\data\generated
#   sd edit UcdProperties.h
#   sd edit UcdData.bin
#   cd ..\tables
#   ucdtool.exe
#
# Attributes:
#
# GeneratedHeader
#   Code header produced with function names and enums.
#
# GeneratedBinary
#   Binary data file containing properties.
#
# Property
#   String name of property to use. This property is used to generate the header
#   function name and enum values. It's also referenced by rules.
#
# SymbolPrefix
#   Alternate name to use in generated identifiers, which defaults to the
#   property name.
#
# Type
#   Boolean, Enumeration, HexValue, DecimalValue, String
#
#   Boolean properties also require the Category to be specified. Typically
#   Ucd files containing boolean properties have several different properties
#   in a single file. The Category disambiguates which one to generate for.  
#   The generated header will contain a function named "UcdIs<GeneratedType>".
#
#   Emumerated properties require the DefaultValue to be specified. The
#   generated header will contain an enum <GeneratedType> containing all the 
#   values for that property as well as a function named "UcdGet<GeneratedType>".
#   Enumerated properties may optionally specify a SymbolPrefix that is
#   prepended to the value names listed in the enum. If no SymbolPrefix is
#   given then <GeneratedType> is used as the prefix.
#
#   Value properties can be either hex or decimal (HexValue/DecimalValue),
#   and require a DefaultValue in case one is not specified for the character.
#   The generated function will be named "UcdGet<GeneratedType>".
#
#   Strings cannot be stored to the binary data, but they can be used by rules.
#
# Category
#   Binary property to match against inside the data file.
#   ex: 'White_Space'
#
# Column
#   Which column of the line to read the value, 0..n; The default is 1,
#   just after the character range.
#
# FileIn
#   Source UCD text file. It's actually optional, as rules alone can completely
#   derive a file. If one is specified, rules only fill in the missing
#   characters.
#
# FileOut
#   Output UCD text file. This is useful for properties generated from rules
#   (without rules, it would effectively just write back out the input file).
#
# IsStoredProperty
#   Flag true/false whether or not to store the property in the generated data
#   file and header. Some properties are read solely for the sake of generating
#   other properties and should not be stored in the data.
#
# DefaultValue
#   String used for missing values.
#   ex: 'XX' for line breaking
#
# Exception
#   Explicit property to override value from the data file.
#   ex: '2028;Cc' for general category
#
# Enum
#   Specifies an explicit value for enumeration rather than leaving it to
#   alphabetic ordering.
#
# Rule
#   Declares a rule to generate character properties when missing using other
#   properties. Rules are executed in order, exiting upon the first match
#   with a Case or Select statement where all conditions are satisfied.
#   The rules are very primitive and consist of a series of set operations
#   (union/intersection/negation) as boolean algebra. Each rule can be named
#   to refer to it later.
#
#   In        - IsStrongBidi: In Bidi L R AL
#               HasMirrorPair: In MirrorCharacter
#   Out       - IsNotControl: Out GeneralCategory Cf Cc
#   And       - IsBidiParen: And IsOpenClose HasMirrorPair
#               IsUprightParen: And IsIdeographic IsOpenClose HasMirrorPair
#   Or        - IsIdeographic: Or IsIdeographicBlock IsIdeographicLineBreak
#   Not       - CanRotate: Not IsIdeographic IsUpright
#   Case      - Case UP IsUpright IsIdeographic
#               Case Simple IsSimpleScript
#   Select    - Select GeneralCategory
#   Assert    - Assert IsValidOrientation
#   AssertAny - AssertAny IsMarkedComplex IsActuallySimple
#               NoMatchingCaseFound: AssertAny
#   AssertNot - AssertNot IsConflictingComplexity
#
#
# Note that all attributes are case-sensitive.
#
# These first few attributes (before the first File attribute) are directives
# to ucdtool. Note that the paths here assume that ucdtool is run from
# windows\core\text\data\tables.

GeneratedHeader=..\Generated\UcdProperties.h
GeneratedBinary=..\Generated\UcdData.bin


# Now for the properties.

Property=WhiteSpace
FileIn=PropList.txt
Type=Boolean
Category=White_Space

Property=BidiMirrored
FileIn=DerivedBinaryProperties.txt
Type=Boolean
Category=Bidi_Mirrored

Property=VariationSelector
FileIn=PropList.txt
Type=Boolean
Category=Variation_Selector

Property=OtherGraphemeExtender
FileIn=PropList.txt
Type=Boolean
Category=Other_Grapheme_Extend
IsStoredProperty=false

Property=LineBreakClass
FileIn=LineBreak.txt
Type=Enumeration
DefaultValue=XX

# The numeric script values should be taken from: http://unicode.org/iso15924/iso15924-codes.html
Property=Script
FileIn=Scripts.txt
Type=Enumeration
DefaultValue=Unknown
Enum=Unknown;0
Enum=Common;1
Enum=Inherited;2

Property=BidiClass
FileIn=DerivedBidiClass.txt
Type=Enumeration
SymbolPrefix=BidiClass_
DefaultValue=L

Property=GeneralCategory
FileIn=DerivedGeneralCategory.txt
Type=Enumeration
DefaultValue=Cn
Exception=2028;Cc                  # Treat line separator as control, not it's own special category
Exception=2029;Cc                  # Treat paragraph separator as control, not it's own special category

Property=MirrorCharacter
FileIn=BidiMirroring.txt
Type=HexValue
DefaultValue=inputChar

Property=OrientationClass
FileIn=Orientation.txt
Type=Enumeration
DefaultValue=Unknown

Property=CharacterComplexity
FileIn=CharacterComplexity.txt
Type=Enumeration
Enum=Simple;0x00                   # Completely simple
Enum=Complex;0x01                  # Complex script
Enum=Bidi;0x02                     # May not need shaping, but needs bidi
Enum=Supplementary;0x04            # May be simple, but beyond BMP
Enum=LineBreak;0x08                # Line break
Enum=Unknown;0xFF                  # unknown
DefaultValue=Complex

Property=CharacterName
Type=String
FileIn=UnicodeData.txt
IsStoredProperty=false
Column=1

Property=FontExtender
FileIn=FontExtender.txt
FileOut=..\Generated\FontExtender.generated.txt
Type=Boolean
Category=Font_Extender
Rule=IsCombiningMark: In GeneralCategory Mn Mc Me
Rule=IsCombiningScript: In Script Inherited
Rule=IsGraphemeExtender: In OtherGraphemeExtender
Rule=IsFontExtender: Or IsCombiningMark IsCombiningScript IsGraphemeExtender
Rule=Case Font_Extender IsFontExtender
