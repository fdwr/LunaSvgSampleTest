'Sprite Editor
'*************
'by Steven Sensarn
'--
'To get more Qbasic programs, games, & utilities, surf here:
'http://qbasicland.home.ml.org
'--
'NOTE: SEE SPRITES.TXT FOR THE CODE TO SHOW AN IMAGE
'--
DECLARE FUNCTION CHECKEMPTY! (SIZE%)
DECLARE SUB ERASEMATRIX ()
DECLARE SUB MENU (STATUS%)
DECLARE SUB SHOW ()
DECLARE FUNCTION INBOX! (X%, Y%, X1%, Y1%, X2%, Y2%)
DECLARE SUB REDRAW (WHAT$)
DECLARE FUNCTION PIXELDATA% (P1%, P2%)
DECLARE SUB CENTER (MESSAGE$)
DECLARE SUB SETUP ()
DECLARE SUB MSPUT (X%, Y%)
DECLARE SUB MSSTATUS (LB%, RB%, XMOUSE%, YMOUSE%)
DECLARE SUB MSRNG (X1%, Y1%, X2%, Y2%)
DECLARE SUB MSDRV (AX%, BX%, CX%, DX%)
DECLARE FUNCTION MSINIT% ()
DECLARE SUB MSDSP (AX%)
TYPE TPIX
        X AS INTEGER
        Y AS INTEGER
        CLR AS INTEGER
END TYPE
DIM SHARED PIX AS TPIX
DIM SHARED MOUSE$: MOUSE$ = SPACE$(57)
DIM SHARED MATRIX(63, 63), COLPAL(15, 15)
DIM SHARED SCROLLX, SCROLLY, NEWCOLOR
CLS : SCREEN 13
FOR I = 1 TO 57
READ A$
H$ = CHR$(VAL("&H" + A$))
MID$(MOUSE$, I, 1) = H$
NEXT I
MS% = MSINIT%
IF NOT MS% THEN END
CALL MSDSP(1)
CALL MSRNG(0, 0, 637, 198)
CALL MSPUT(319, 239)
START:
'SPRITE 2.0 BEGINS
CLS : SCREEN 0: WIDTH 80
CALL MSDSP(2)
PRINT "SPRITE EDITOR VERSION 2.0"
PRINT "PROGRAMMED BY STEVEN SENSARN"
PRINT "PRESS ESC TO GO TO MENU"
PRINT "USES NEW MATRIX DESIGN, FEEL FREE TO GO TO THE MENU ANY TIME"
SLEEP 3
CLS
SCREEN 13
CALL SETUP
CALL MSDSP(1)
DO
CALL MSSTATUS(LB%, RB%, X%, Y%)
IF LB% THEN
IF Y% < 96 AND INT(X% / 2) > 223 AND POINT(INT(X% / 2), Y%) <> 255 THEN
XB% = INT(INT(X% / 2) / 6) - 39 + 2 'CURRENT COLPAL BOX
YB% = INT(Y% / 6) 'CURRENT COLPAL BOX
XB% = XB% * 6 + 226 'CURRENT COLPAL BOX CENTER LOCATION
YB% = YB% * 6 + 3 'CURRENT COLPAL BOX CENTER LOCATION
CALL MSDSP(2): NEWCOLOR = POINT(XB%, YB%): CALL MSDSP(1)
ELSE
IF Y% < 188 AND INT(X% / 2) < 192 AND POINT(INT(X% / 2), Y%) <> 255 THEN
XB% = INT(INT(X% / 2) / 4) * 4 + 2 'CENTER OF CURRENT BOX
YB% = INT(Y% / 4) * 4 + 2'CENTER OF CURRENT BOX
CALL MSDSP(2): PAINT (XB%, YB%), NEWCOLOR, 255
IF NEWCOLOR = 0 THEN PSET (XB%, YB%), 254
CALL MSDSP(1)
MATRIX(INT(INT(X% / 2) / 4) + SCROLLX, INT(Y% / 4) + SCROLLY) = NEWCOLOR
END IF
END IF
IF INBOX(X%, Y%, 223, 100, 267, 115) THEN
SCROLLX = SCROLLX - 16: IF SCROLLX = -16 THEN BEEP: SCROLLX = 0
CALL REDRAW("MATRIX")
END IF
IF INBOX(X%, Y%, 275, 100, 319, 115) THEN
SCROLLX = SCROLLX + 16: IF SCROLLX = 32 THEN BEEP: SCROLLX = 16
CALL REDRAW("MATRIX")
END IF
END IF
IF RB% THEN
IF Y% < 188 AND INT(X% / 2) < 192 AND POINT(INT(X% / 2), Y%) <> 255 THEN
XB% = INT(INT(X% / 2) / 4) * 4 + 2 'CENTER OF CURRENT BOX
YB% = INT(Y% / 4) * 4 + 2'CENTER OF CURRENT BOX
CALL MSDSP(2): PAINT (XB%, YB%), 0, 255: PSET (XB%, YB%), 254: CALL MSDSP(1)
MATRIX(INT(INT(X% / 2) / 4) + SCROLLX, INT(Y% / 4) + SCROLLY) = 0
END IF
IF INBOX(X%, Y%, 223, 100, 267, 115) THEN
SCROLLY = SCROLLY - 17: IF SCROLLY = -17 THEN BEEP: SCROLLY = 0
CALL REDRAW("MATRIX")
END IF
IF INBOX(X%, Y%, 275, 100, 319, 115) THEN
SCROLLY = SCROLLY + 17: IF SCROLLY = 34 THEN BEEP: SCROLLY = 17
CALL REDRAW("MATRIX")
END IF
IF INBOX(X%, Y%, 239, 125, 302, 188) THEN CALL SHOW
END IF
IF INBOX(X%, Y%, 0, 0, 192, 188) THEN
LOCATE 23, 28: PRINT MATRIX(INT(INT(X% / 2) / 4), INT(Y% / 4)); SPACE$(4 - LEN(STR$(MATRIX(INT(INT(X% / 2) / 4), INT(Y% / 4))))); INT(INT(X% / 2) / 4) + SCROLLX; INT(Y% / 4) + SCROLLY
ELSE
LOCATE 23, 28: PRINT SPACE$(12)
END IF
LOOP UNTIL INKEY$ = CHR$(27)
CALL MSDSP(2)
DO
CALL MENU(STATUS%)
IF STATUS% = 1 THEN GOTO START
LOOP UNTIL STATUS%

DATA 55,89,E5,8B,5E,0C,8B,07,50,8B,5E,0A,8B,07
DATA 50,8B,5E,08,8B,0F,8B,5E,06,8B,17,5B,58,1E
DATA 07,CD,33,53,8B,5E,0C,89,07,58,8B,5E,0A,89,07
DATA 8B,5E,08,89,0F,8B,5E,06,89,17,5D,CA,08,00

SUB CENTER (MESSAGE$)
PRINT TAB((40 - LEN(MESSAGE$)) / 2); MESSAGE$
END SUB

FUNCTION CHECKEMPTY (SIZE%)
NULLS = 0
FOR Y = 0 TO 63
FOR X = 0 TO 63
IF MATRIX(X, Y) = 0 THEN NULLS = NULLS + 1 'CHECK FOR EMPTY MATRIX
NEXT X
NEXT Y
IF NULLS > SIZE% THEN CHECKEMPTY = 0 ELSE CHECKEMPTY = -1
END FUNCTION

SUB ERASEMATRIX
FOR Y = 0 TO 63
FOR X = 0 TO 63
MATRIX(X, Y) = 0
NEXT X
NEXT Y
END SUB

FUNCTION INBOX (X%, Y%, X1%, Y1%, X2%, Y2%)
IF INT(X% / 2) > X1% AND INT(X% / 2) < X2% AND Y% > Y1% AND Y% < Y2% THEN INBOX = -1
END FUNCTION

SUB MENU (STATUS%)
STATUS% = 0
REDIM SMATRIX%(63, 63)
CLS : SCREEN 0: WIDTH 80
PRINT "SPRITE VERSION 2.0 MENU"
PRINT : PRINT : PRINT : PRINT
PRINT : PRINT "(R)ETURN TO MATRIX"
PRINT : PRINT "(N)EW MATRIX"
PRINT : PRINT "(L)OAD MATRIX"
PRINT : PRINT "LOAD SPRITE (1).0 FILE"
PRINT : PRINT "(S)AVE AS MATRIX"
PRINT : PRINT "SAVE AS (Q)UICK GRAPHIC"
PRINT : PRINT "(A)PPEND TO BAS FILE"
PRINT : PRINT "(E)XIT"
DO
C$ = INKEY$
LOOP UNTIL C$ <> ""
C$ = UCASE$(C$)
SELECT CASE C$

CASE "R"
STATUS% = 1

CASE "N"
STATUS% = 1
CALL ERASEMATRIX

CASE "A"
CLS
S% = CHECKEMPTY(4095)
IF NOT S% THEN PRINT "CANNOT SAVE AN EMPTY IMAGE.": SLEEP 3: EXIT SUB
DO
CLS
LOCATE 10, 1
PRINT "DIRECTORY TO SAVE TO > "
INPUT "(EXAMPLE=C:\DOS\): ", DR$
LOCATE 14, 1
PRINT "QBASIC FILE> "
INPUT "(EXAMPLE=TEST.BAS): ", FILE$
LOOP UNTIL RIGHT$(FILE$, 4) = ".BAS" AND LEN(FILE$) <= 12
CLS : PRINT "APPEND TO "; DR$ + FILE$; "? (Y/N)"
DO
K$ = INKEY$
LOOP UNTIL K$ <> ""
IF UCASE$(K$) <> "Y" THEN EXIT SUB
OPEN DR$ + FILE$ FOR APPEND AS #1
FOR Y = 0 TO 63
DAT$ = "DATA "
FOR X = 0 TO 63
IF X <> 63 THEN
DAT$ = DAT$ + HEX$(MATRIX(X, Y)) + ","
ELSE
DAT$ = DAT$ + HEX$(MATRIX(X, Y))
END IF
NEXT X
PRINT #1, DAT$
NEXT Y
CLOSE

CASE "L"
DO
CLS
LOCATE 10, 1
PRINT "DIRECTORY TO LOAD FROM > "
INPUT "(EXAMPLE=C:\DOS\): ", DR$
LOCATE 14, 1
PRINT "MATRIX FILE > "
INPUT "(EXAMPLE=TEST.MTX): ", FILE$
LOOP UNTIL RIGHT$(FILE$, 4) = ".MTX" AND LEN(FILE$) <= 12
CLS : PRINT "LOAD "; DR$ + FILE$; "? (Y/N)"
DO
K$ = INKEY$
LOOP UNTIL K$ <> ""
IF K$ <> "Y" THEN EXIT SUB
OPEN DR$ + FILE$ FOR RANDOM AS #1 LEN = 2
IF LOF(1) = 0 THEN
PRINT : PRINT DR$ + FILE$; " IS EMPTY.": SLEEP 3
CLOSE : KILL DR$ + FILE$
EXIT SUB
END IF
C = 1
FOR Y = 0 TO 63
FOR X = 0 TO 63
GET #1, C, SMATRIX%(X, Y)
MATRIX(X, Y) = SMATRIX%(X, Y)
C = C + 1
NEXT X
NEXT Y
CLOSE
STATUS% = 1
EXIT SUB

CASE "1"
DO
CLS
LOCATE 10, 1
PRINT "DIRECTORY TO LOAD FROM > "
INPUT "(EXAMPLE=C:\DOS\): ", DR$
LOCATE 14, 1
PRINT "SPRITE FILE > "
INPUT "(EXAMPLE=TEST.SPR): ", FILE$
LOOP UNTIL RIGHT$(FILE$, 4) = ".SPR" AND LEN(FILE$) <= 12
CLS : PRINT "LOAD "; DR$ + FILE$; "? (Y/N)"
DO
K$ = INKEY$
LOOP UNTIL K$ <> ""
IF K$ <> "Y" THEN EXIT SUB
OPEN DR$ + FILE$ FOR RANDOM AS #1 LEN = LEN(PIX)
IF LOF(1) = 0 THEN
PRINT : PRINT DR$ + FILE$; " IS EMPTY.": SLEEP 3
CLOSE : KILL DR$ + FILE$
EXIT SUB
END IF
C = 1
CALL ERASEMATRIX
DO UNTIL EOF(1)
GET #1, C, PIX
C = C + 1
IF PIX.X = 0 AND PIX.Y = 0 AND PIX.CLR = 0 THEN EXIT DO
IF NOT PIX.CLR > 253 THEN MATRIX(PIX.X, PIX.Y) = PIX.CLR ELSE MATRIX(PIX.X, PIX.Y) = 252
LOOP
CLOSE
STATUS% = 1
EXIT SUB

CASE "S"
CLS
S% = CHECKEMPTY(4095)
IF NOT S% THEN PRINT "CANNOT SAVE AN EMPTY IMAGE.": SLEEP 3: EXIT SUB
DO
CLS
LOCATE 10, 1
PRINT "DIRECTORY TO SAVE TO > "
INPUT "(EXAMPLE=C:\DOS\): ", DR$
LOCATE 14, 1
PRINT "MATRIX FILE > "
INPUT "(EXAMPLE=TEST.MTX): ", FILE$
LOOP UNTIL RIGHT$(FILE$, 4) = ".MTX" AND LEN(FILE$) <= 12
CLS : PRINT "SAVE TO "; DR$ + FILE$; "? (Y/N)"
DO
K$ = INKEY$
LOOP UNTIL K$ <> ""
IF K$ <> "Y" THEN EXIT SUB
FOR Y = 0 TO 63
FOR X = 0 TO 63
SMATRIX%(X, Y) = MATRIX(X, Y) 'TRANSFER FOR SIZE
NEXT X
NEXT Y
OPEN DR$ + FILE$ FOR RANDOM AS #1 LEN = 2
C = 1
FOR Y = 0 TO 63
FOR X = 0 TO 63
PUT #1, C, SMATRIX%(X, Y)
C = C + 1
NEXT X
NEXT Y
CLOSE

CASE "Q"
CLS
S% = CHECKEMPTY(4095)
IF NOT S% THEN PRINT "CANNOT SAVE AN EMPTY IMAGE.": SLEEP 3: EXIT SUB
DO
CLS
LOCATE 10, 1
PRINT "DIRECTORY TO SAVE TO > "
INPUT "(EXAMPLE=C:\DOS\): ", DR$
LOCATE 14, 1
PRINT "QG FILE > "
INPUT "(EXAMPLE=TEST.QG): ", FILE$
LOOP UNTIL RIGHT$(FILE$, 3) = ".QG" AND LEN(FILE$) <= 11
CLS : PRINT "SAVE TO "; DR$ + FILE$; "? (Y/N)"
DO
K$ = INKEY$
LOOP UNTIL K$ <> ""
IF K$ <> "Y" THEN EXIT SUB
OPEN DR$ + FILE$ FOR RANDOM AS #1 LEN = 2
QGS = INT(LOF(1) / 4100)
C = 1
IF QGS <> 0 THEN
PRINT : PRINT "THERE ARE CURRENTLY "; QGS; " QG'S IN THIS FILE:"
PRINT : PRINT "(A)PPEND"
PRINT : PRINT "(E)RASE"
DO
K$ = INKEY$
LOOP UNTIL UCASE$(K$) = "A" OR UCASE$(K$) = "E"
IF UCASE$(K$) = "A" THEN
C = LOF(1) / 2 + 1
ELSE
CLOSE
OPEN DR$ + FILE$ FOR OUTPUT AS #1 LEN = 2
CLOSE
OPEN DR$ + FILE$ FOR RANDOM AS #1 LEN = 2
C = 1
END IF
END IF
DAT% = 512
PUT #1, C, DAT%
DAT% = 64
PUT #1, C + 1, DAT%
C = C + 2
FOR Y = 0 TO 63
FOR X = 0 TO 63 STEP 2
P1% = MATRIX(X, Y): P2% = MATRIX(X + 1, Y)
N% = PIXELDATA%(P1%, P2%)
PUT #1, C, N%
C = C + 1
NEXT X
NEXT Y
CLOSE

CASE "E"
STATUS% = -1
END SELECT
END SUB

SUB MSDRV (AX%, BX%, CX%, DX%)
DEF SEG = VARSEG(MOUSE$)
MOUSE% = SADD(MOUSE$)
CALL absolute(AX%, BX%, CX%, DX%, MOUSE%)
END SUB

SUB MSDSP (AX%)
MSDRV AX%, 0, 0, 0
END SUB

FUNCTION MSINIT%
AX% = 0
MSDRV AX%, 0, 0, 0
MSINIT% = AX%
END FUNCTION

SUB MSPUT (X%, Y%)
AX% = 4
CX% = X%
DX% = Y%
MSDRV AX%, 0, CX%, DX%
END SUB

SUB MSRNG (X1%, Y1%, X2%, Y2%)
AX% = 7
CX% = X1%
DX% = X2%
MSDRV AX%, 0, CX%, DX%
AX% = 8
CX% = Y1%
DX% = Y2%
MSDRV AX%, 0, CX%, DX%
END SUB

SUB MSSTATUS (LB%, RB%, XMOUSE%, YMOUSE%)
AX% = 3
MSDRV AX%, BX%, CX%, DX%
LB% = ((BX% AND 1) <> 0)
RB% = ((BX% AND 2) <> 0)
XMOUSE% = CX%
YMOUSE% = DX%
END SUB

FUNCTION PIXELDATA% (P1%, P2%)
PIXELDATA% = VAL("&H" + HEX$(P2%) + STRING$(2 - LEN(HEX$(P1%)), "0") + HEX$(P1%))
END FUNCTION

SUB REDRAW (WHAT$)
CALL MSDSP(2)
SELECT CASE WHAT$
CASE "COLPAL"
CX = 0: CY = 0 'USE THESE FOR COLPAL LOCATIONS
FOR Y = 3 TO 93 STEP 6 'CENTER OF BOXES Y
FOR X = 226 TO 316 STEP 6 'CENTER OF BOXES X
PAINT (X, Y), COLPAL(CX, CY), 255
CX = CX + 1
NEXT X
CX = 0
CY = CY + 1
NEXT Y
CASE "MATRIX"
SX = SCROLLX: SY = SCROLLY 'USE THESE FOR MATRIX LOCATIONS
CX = SX: CY = SY'THESE WILL CHANGE BUT SX AND SY WILL NOT
FOR Y = 2 TO 186 STEP 4'CENTER OF BOXES Y
FOR X = 2 TO 190 STEP 4 'CENTER OF BOXES X
PAINT (X, Y), MATRIX(CX, CY), 255
IF MATRIX(CX, CY) = 0 THEN PSET (X, Y), 254
CX = CX + 1
NEXT X
CX = SX
CY = CY + 1
NEXT Y
END SELECT
CALL MSDSP(1)
END SUB

SUB SETUP
SCREEN 13
CLS
CALL MSDSP(2)
PALETTE 255, &HF0F0F
PALETTE 254, &H141414
FOR X = 0 TO 48 * 4 STEP 4
LINE (X, 0)-(X, 47 * 4), 255
NEXT X
FOR Y = 0 TO 47 * 4 STEP 4
LINE (0, Y)-(48 * 4, Y), 255
NEXT Y
FOR X = 319 - (16 * 6) TO 319 STEP 6
LINE (X, 0)-(X, 16 * 6), 255
NEXT X
FOR Y = 0 TO (16 * 6) STEP 6
LINE ((319 - 16 * 6), Y)-(319, Y), 255
NEXT Y
C = 0
FOR YCOL = 0 TO 15
FOR XCOL = 0 TO 15
COLPAL(XCOL, YCOL) = C
C = C + 1
NEXT XCOL
NEXT YCOL
COLPAL(15, 15) = 0 'COLOR 256 IS 0
COLPAL(14, 15) = 0 'DONT ALLOW ACCESS TO COLOR 255
COLPAL(13, 15) = 0'DONT ALLOW ACCESS TO COLOR 254 'DOTS IN CENTER OF BOXES
CALL REDRAW("COLPAL"): CALL REDRAW("MATRIX")
SLB$ = "BM223,100;C255;R44;D15;L44;U15;BM237,107;E5;R5;D3;R5;D3;L5;D3;L5;H5"
'SLB$ IS THE LEFT SCROLL BUTTON 245,127 TO FILL ARROW, 232,127 FOR BOX
SRB$ = "BM275,100;C255;R44;D15;L44;U15;BM305,107;H5;L5;D3;L5;D3;R5;D3;R5;E5"
'SRB$ IS THE RIGHT SCROLL BUTTON 300,127 TO FILL ARROW, 310,127 FOR BOX
DRAW SLB$
PAINT (245, 107), 26, 255: PAINT (232, 107), 22, 255
DRAW SRB$
PAINT (300, 107), 26, 255: PAINT (310, 107), 22, 255
CALL MSPUT(452, 3)
CALL MSDSP(1)
END SUB

SUB SHOW
CALL MSDSP(2)
CX = 0: CY = 0
FOR Y = 125 TO 188 'ALIGNED WITH MATRIX
FOR X = 239 TO 302 'CENTER UNDER SCROLL BUTTONS
PSET (X, Y), MATRIX(CX, CY)
CX = CX + 1
NEXT X
CX = 0
CY = CY + 1
NEXT Y
DO
CALL MSSTATUS(LB%, RB%, X%, Y%)
LOOP UNTIL LB%
LINE (239, 125)-(302, 188), 0, BF
CALL MSDSP(1)
END SUB

